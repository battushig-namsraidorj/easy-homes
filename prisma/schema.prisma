// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Type {
  RENT
  SALE
}

enum BHK {
  ONE_RK
  ONE_BHK
  TWO_BHK
  THREE_BHK
  FOUR_BHK
}

enum Parking {
  YES
  NO
}

enum PreferredTenants {
  FAMILY
  BACHELORS
}

enum PropertyType {
  APARTMENT
  INDEPENDENT
}

model Images {
  id         Int      @id @default(autoincrement())
  url        String
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId Int
}

model Property {
  id               Int              @id @default(autoincrement())
  name             String
  description      String?
  type             Type
  price            Float
  street           String
  city             String
  state            String
  zipcode          String
  bhk              BHK
  area             Int
  parking          Parking
  images           Images[]
  preferredTenants PreferredTenants
  propertyType     PropertyType
  availableFrom    DateTime
  isFeatured       Boolean          @default(false)
  savedBy          User[]           @relation("UserSavedProperty")
  isSold           Boolean          @default(false)
  owner            User             @relation(fields: [ownerId], references: [id])
  ownerId          Int
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  messages         Message[]
}

model User {
  id               Int        @id @default(autoincrement())
  email            String     @unique
  username         String
  image            String?
  savedProperties  Property[] @relation("UserSavedProperty")
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  property         Property[]
  sentMessages     Message[]  @relation("SentMessages")
  receivedMessages Message[]  @relation("ReceivedMessages")
}

model Message {
  id         Int      @id @default(autoincrement())
  message    String
  isRead     Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId Int
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId   Int
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId Int
}
